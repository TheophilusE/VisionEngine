///\file
/// Contains defines containing the PAL version numbers.
/// CMake scripts get the PAL version numbers by reading this file.

#ifndef PAL_CONFIG_VERSION_H
#define PAL_CONFIG_VERSION_H

#define PAL_SDK_VERSION_MAJOR	0
#define PAL_SDK_VERSION_MINOR	7
#define PAL_SDK_VERSION_BUGFIX 0

/* Convenience macro that can be used to decide whether a feature is present or not i.e.
 * #if PAL_MIN_VERSION_REQUIRED(0,7,0)
 *    your code here
 * #endif
 */
#define PAL_MIN_VERSION_REQUIRED(MAJOR, MINOR, BUGFIX) ((PAL_SDK_VERSION_MAJOR>MAJOR) || (PAL_SDK_VERSION_MAJOR==MAJOR && (PAL_SDK_VERSION_MINOR>MINOR || (PAL_SDK_VERSION_MINOR==MINOR && PAL_SDK_VERSION_BUGFIX>=BUGFIX))))
#define PAL_VERSION_LESS_THAN(MAJOR, MINOR, BUGFIX) ((PAL_SDK_VERSION_MAJOR<MAJOR) || (PAL_SDK_VERSION_MAJOR==MAJOR && (PAL_SDK_VERSION_MINOR<MINOR || (PAL_SDK_VERSION_MINOR==MINOR && PAL_SDK_VERSION_BUGFIX<BUGFIX))))
#define PAL_VERSION_LESS_OR_EQUAL(MAJOR, MINOR, BUGFIX) ((PAL_SDK_VERSION_MAJOR<MAJOR) || (PAL_SDK_VERSION_MAJOR==MAJOR && (PAL_SDK_VERSION_MINOR<MINOR || (PAL_SDK_VERSION_MINOR==MINOR && PAL_SDK_VERSION_BUGFIX<=BUGFIX))))
#define PAL_VERSION_GREATER_THAN(MAJOR, MINOR, BUGFIX) ((PAL_SDK_VERSION_MAJOR>MAJOR) || (PAL_SDK_VERSION_MAJOR==MAJOR && (PAL_SDK_VERSION_MINOR>MINOR || (PAL_SDK_VERSION_MINOR==MINOR && PAL_SDK_VERSION_BUGFIX>BUGFIX))))
#define PAL_VERSION_GREATER_OR_EQUAL(MAJOR, MINOR, BUGFIX) ((PAL_SDK_VERSION_MAJOR>MAJOR) || (PAL_SDK_VERSION_MAJOR==MAJOR && (PAL_SDK_VERSION_MINOR>MINOR || (PAL_SDK_VERSION_MINOR==MINOR && PAL_SDK_VERSION_BUGFIX>=BUGFIX))))


#endif	// PAL_CONFIG_VERSION_H
